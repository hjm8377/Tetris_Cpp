#pragma once
#include "Console.h"
#include "sound.h"
class Tetris_
{
private:
	/*블럭/보드 변수*/
	int block[7][4][4][4] =
	{
		//0
		0,0,0,0,
		1,0,0,0,
		1,1,1,0,
		0,0,0,0,

		1,1,0,0,
		1,0,0,0,
		1,0,0,0,
		0,0,0,0,

		1,1,1,0,
		0,0,1,0,
		0,0,0,0,
		0,0,0,0,

		0,0,1,0,
		0,0,1,0,
		0,1,1,0,
		0,0,0,0,

		//1
		0, 0, 0, 0,
		0, 0, 1, 0,
		1, 1, 1, 0,
		0, 0, 0, 0,

		1, 0, 0, 0,
		1, 0, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,

		1, 1, 1, 0,
		1, 0, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0,

		0, 1, 1, 0,
		0, 0, 1, 0,
		0, 0, 1, 0,
		0, 0, 0, 0,

		//2
		0, 0, 0, 0,
		0, 1, 0, 0,
		1, 1, 1, 0,
		0, 0, 0, 0,

		0, 0, 0, 0,
		0, 1, 0, 0,
		0, 1, 1, 0,
		0, 1, 0, 0,

		0, 0, 0, 0,
		0, 0, 0, 0,
		1, 1, 1, 0,
		0, 1, 0, 0,

		0, 0, 0, 0,
		0, 1, 0, 0,
		1, 1, 0, 0,
		0, 1, 0, 0 ,

		//3
		0, 1, 0, 0,
		0, 1, 0, 0,
		0, 1, 0, 0,
		0, 1, 0, 0,

		0, 0, 0, 0,
		0, 0, 0, 0,
		1, 1, 1, 1,
		0, 0, 0, 0,

		0, 1, 0, 0,
		0, 1, 0, 0,
		0, 1, 0, 0,
		0, 1, 0, 0,

		0, 0, 0, 0,
		0, 0, 0, 0,
		1, 1, 1, 1,
		0, 0, 0, 0,

		//4
		1, 1, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0,

		1, 1, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0,

		1, 1, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0,

		1, 1, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0,

		//5
		0, 0, 0, 0,
		0, 1, 1, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,

		0, 1, 0, 0,
		0, 1, 1, 0,
		0, 0, 1, 0,
		0, 0, 0, 0,

		0, 0, 0, 0,
		0, 1, 1, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,

		0, 1, 0, 0,
		0, 1, 1, 0,
		0, 0, 1, 0,
		0, 0, 0, 0,

		//6
		0, 0, 0, 0,
		1, 1, 0, 0,
		0, 1, 1, 0,
		0, 0, 0, 0,

		0, 0, 1, 0,
		0, 1, 1, 0,
		0, 1, 0, 0,
		0, 0, 0, 0,

		0, 0, 0, 0,
		1, 1, 0, 0,
		0, 1, 1, 0,
		0, 0, 0, 0,

		0, 0, 1, 0,
		0, 1, 1, 0,
		0, 1, 0, 0,
		0, 0, 0, 0,
	};
	/*int Board[25][12] =
	{
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
		2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
	};  //콘솔창에 보드를 그리기 위한 변수
	*/
	int bx = 15, by = 5;

public:
	Tetris_();
	~Tetris_();
	int score = 0;
	int level = 1;
	int speed = 400;
	int n;
	int key;
	int a = 0;	//회전을 위한 변수
	int cnt;
	int blockarr[7];
	/*벽 블럭 빈칸*/
	enum type {
		EMPTY, BLOCK, WALL
	};
	/*테트리스 기본 요소 구조체*/
	typedef struct {
		bool gameover;	//게임 끝 체크 변수	
		int rotation;	//회전 횟수
		int absX, absY;	//위치 절댓값
		int curX, curY;	//현재 커서 위치
		int curblock;	//현재 블럭 체크 변수
		int next;	//다음 블럭 결정 변수
		int preX, preY;
	}Tetris;
	int board[25][12] = { 0, };
	void resetboard();
	void boardset();
	void printblock(Tetris t);
	void removeblock(Tetris t);
	void printpreviewblock(Tetris t);
	void removepreviewblock(Tetris t);
	void printnextblock(int next);
	void removenextblock(int next);
	int CollisionCheck(Tetris t);
	int CollisionCheck_R(Tetris t);
	int CollisionCheck_L(Tetris t);
	void merge_block_board(Tetris t);
	int Check_topline();
	void previewblock(int dir, Tetris t);
	void array_down(int line);
	void Line_clear(Tetris t);
	void pause(int key, Tetris t);
	void initblock(int* blockarr);
	void Game();	//게임진행 함수

	
};